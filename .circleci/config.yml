version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.9
    working_directory: /go/src/github.com/adobe/pushprox
    steps:
      - checkout
      - run:
          name: Build proxy
          command: |
              cd /go/src/github.com/adobe/pushprox/proxy
              go get
              go build
      - run:
          name: Build client
          command: |
              cd /go/src/github.com/adobe/pushprox/client
              go get
              go build
      - persist_to_workspace:
          root: ./
          paths:
            - proxy/proxy
            - client/client
      - run:
          name: Download and untar node_exporter
          command: |
              wget https://github.com/prometheus/node_exporter/releases/download/v0.15.1/node_exporter-0.15.1.linux-amd64.tar.gz
              tar xzf node_exporter-0.15.1.linux-amd64.tar.gz
      - run:
          name: Download, untar, and configure Prometheus
          command: |
              wget https://github.com/prometheus/prometheus/releases/download/v2.0.0/prometheus-2.0.0.linux-amd64.tar.gz
              tar xzf prometheus-2.0.0.linux-amd64.tar.gz
              cd prometheus-2.0.0.linux-amd64
              rm prometheus.yml
              cat << EOF > prometheus.yml
              global:
                scrape_interval: 10s
                scrape_timeout: 5s
              scrape_configs:
                - job_name: pushprox
                  proxy_url: http://127.0.0.1:8080
                  static_configs:
                    - targets: ['$(hostname):9100']
              EOF
      - run:
          name: Run everything and test that Prometheus can scrape node_exporter via pushprox
          command: |
              ./node_exporter-0.15.1.linux-amd64/node_exporter &
              echo "Node epxporter is launched"
              ./proxy/proxy &
              echo "Proxy is launched"
              ./client/client --proxy-url=http://127.0.0.1:8080 --pull-url=http://127.0.0.1:9100/metrics --fqdn=$(hostname):9100 &
              echo "Client is launched"
              ./prometheus-2.0.0.linux-amd64/prometheus --config.file=prometheus-2.0.0.linux-amd64/prometheus.yml  &
              sleep 5
              echo "From exporter"
              set +e
              sleep 10
              curl -g -v http://localhost:9100/metrics | head -20
              echo "From prometheus"
              curl -g -v http://localhost:9090/api/v1/query?query=node_cpu | head -20
              sleep 5
              set -e
              echo "Checking Promethes result"
              res=`curl -g http://localhost:9090/api/v1/query?query=node_cpu | jq '.data.result | length'`
              if [ $res == 0 ]; then
                  exit 1
              fi
  publish-github-release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          at: ./bin
      - run:
          name: "Publish Release on GitHub"
          command: |
            mkdir out;
            cp bin/client/client bin/proxy/proxy out/;
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG} ./out
workflows:
  version: 2
  main:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - publish-github-release:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
